{
  "locals": {
    "prefix_with_domain": "${var.name_prefix}${replace(\"${var.api_domain}\", \"/[^a-z0-9-]+/\", \"-\")}"
  },
  "variable": {
    "api_domain": {
      "description": "Domain on which the Lambda will be made available (e.g. `\"api.example.com\"`)"
    },
    "api_gateway_cloudwatch_metrics": {
      "default": false,
      "description": "When true, sends metrics to CloudWatch"
    },
    "api_gateway_logging_level": {
      "default": "OFF",
      "description": "Either `\"OFF\"`, `\"INFO\"` or `\"ERROR\"`; note that this requires having a CloudWatch log role ARN globally in API Gateway Settings"
    },
    "comment_prefix": {
      "default": "Lambda API: ",
      "description": "This will be included in comments for resources that are created"
    },
    "function_env_vars": {
      "default": {
        "aws_lambda_api": ""
      },
      "description": "Which env vars (if any) to invoke the Lambda with",
      "type": "${map(string)}"
    },
    "function_handler": {
      "default": "index.handler",
      "description": "Instructs Lambda on which function to invoke within the ZIP file"
    },
    "function_runtime": {
      "default": "nodejs8.10",
      "description": "Which node.js version should Lambda use for this function"
    },
    "function_s3_bucket": {
      "default": "",
      "description": "When provided, the zipfile is retrieved from an S3 bucket by this name instead (filename is still provided via `function_zipfile`)"
    },
    "function_timeout": {
      "default": 3,
      "description": "The amount of time your Lambda Function has to run in seconds"
    },
    "function_zipfile": {
      "description": "Path to a ZIP file that will be installed as the Lambda function (e.g. `\"my-api.zip\"`)"
    },
    "lambda_logging_enabled": {
      "default": false,
      "description": "When true, writes any console output to the Lambda function's CloudWatch group"
    },
    "memory_size": {
      "default": 128,
      "description": "Amount of memory in MB your Lambda Function can use at runtime"
    },
    "name_prefix": {
      "default": "aws-lambda-api---",
      "description": "Name prefix to use for objects that need to be created (only lowercase alphanumeric characters and hyphens allowed, for S3 bucket name compatibility)"
    },
    "stage_name": {
      "default": "default",
      "description": "Name of the single stage created for the API on API Gateway"
    },
    "tags": {
      "default": {},
      "description": "AWS Tags to add to all resources created (where possible); see https://aws.amazon.com/answers/account-management/aws-tagging-strategies/",
      "type": "${map(string)}"
    },
    "throttling_burst_limit": {
      "default": 5000,
      "description": "How many burst requests should the API process at most; see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html"
    },
    "throttling_rate_limit": {
      "default": 10000,
      "description": "How many sustained requests per second should the API process at most; see https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html"
    }
  }
}